    upstream backend {
        server backend:8000;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /docs {
            proxy_pass http://backend;
            proxy_set_header Host $host;
        }

        location /openapi.json {
            proxy_pass http://backend;
            proxy_set_header Host $host;
        }
    }



# events { worker_connections 1024; }

# What: Sets how many clients one Nginx worker can handle at once.
# Why: 1024 is a safe default. Allows ~1024 concurrent users per worker.


# http { ... }

# Main block for HTTP traffic (your API).


# upstream backend { server backend:8000; }

# What: Defines a group named backend.
# Why: All traffic to http://backend goes to the FastAPI container (backend service on port 8000).
# Bonus: If you scale (--scale backend=3), Nginx auto-load-balances across all 3.


# server { listen 80; ... }

# What: Listens on port 80 (standard HTTP).
# Why: You hit http://localhost → Nginx catches it.


# location / { proxy_pass http://backend; ... }

# What: All requests to / → forward to FastAPI.
# Headers (proxy_set_header):

# Host $host: Keeps original domain.
# X-Real-IP, X-Forwarded-For: Passes real client IP (useful for logging).
# X-Forwarded-Proto: Tells app if request was HTTP/HTTPS.




# location /docs { proxy_pass http://backend/docs; }

# What: Forwards /docs → FastAPI Swagger UI.
# Why: So http://localhost/docs works.


# location /openapi.json { ... }

# What: Forwards /openapi.json → FastAPI spec.
# Why: Swagger UI needs this file.